// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String         @id @default(uuid())
  email        String?        @unique
  nickname     String
  password     String
  points       Int            @default(0)
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  Notification Notification[]
  Purchase     Purchase[]
  Card         Card[]
  Store        Store[]
  Exchange     Exchange[]
}

model Notification {
  id      String @id @default(uuid())
  user    User   @relation(fields: [userId], references: [id])
  userId  String
  content String
}

model Purchase {
  id      String @id @default(uuid())
  user    User   @relation(fields: [buyerId], references: [id])
  buyerId String
  cardId  String @default(uuid())
}

model Card {
  id                String   @id @default(uuid())
  user              User     @relation(fields: [ownerId], references: [id])
  ownerId           String
  image             String
  name              String
  price             Int
  grade             Grade    @default(COMMON)
  genre             Genre    @default(LANDSCAPE)
  description       String
  totalQuantity     Int      @default(1)
  remainingQuantity Int
  createdAt         DateTime @default(now())
  store             Store?
}

model Store {
  id       String @id @default(uuid())
  user     User   @relation(fields: [sellerId], references: [id])
  sellerId String
  card     Card   @relation(fields: [cardId], references: [id])
  cardId   String @unique
  price    Int
}

model Exchange {
  id          String @id @default(uuid())
  user        User   @relation(fields: [requesterId], references: [id])
  requesterId String
}

enum Genre {
  TRIP
  PORTRAIT
  OBJECT
  LANDSCAPE
}

enum Grade {
  COMMON
  RARE
  SUPER_RARE
  LEGENDARY
}
